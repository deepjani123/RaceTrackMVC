@model RaceTrackMVC.Models.Vehicle

@{
    ViewBag.Title = "Add Vehicle";
}

<h2>Index</h2>


@using (Html.BeginForm("AddVehicle", "RaceTrack", FormMethod.Post, htmlAttributes: new { @id = "frm1" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Vehicle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Type", EnumHelper.GetSelectList(typeof(RaceTrackMVC.Models.VehicleType)), "select vehicle type", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="lift" hidden>
            @Html.LabelFor(model => model.Lift, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lift, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lift, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="tirewear" hidden>
            @Html.LabelFor(model => model.TireWear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TireWear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TireWear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HasTowStrap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HasTowStrap)
                    @Html.ValidationMessageFor(model => model.HasTowStrap, "", new { @class = "text-danger" })
                    @Html.Hidden(nameof(Model.IsTrue), "true")
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div class="container">
    <div class="row">
        <div class="table-responsive col-md-6">
            <table id="tblVehicle" class="table table-bordered table-striped table-responsive table-hover">
                <thead title="Vehicle">
                    <tr>
                        <th align="left" class="productth">Id</th>
                        <th align="left" class="productth">Vehicle Name</th>
                        <th align="left" class="productth">Vehicle Type</th>
                        <th align="left" class="productth">Add to Track</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div class="table-responsive col-md-6">
            <table id="tblTrack" class="table table-bordered table-striped table-responsive table-hover">
                <thead>
                    <tr>
                        <th align="left" class="productth">Id</th>
                        <th align="left" class="productth">Vehicle Name</th>
                        <th align="left" class="productth">Track Name</th>
                        <th align="left" class="productth">Remove from Track</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

        $(function () {
            $('#Type').on('change', function () {
                var val = this.value;

                if (val === "0") {
                    // Show text box
                    $('#lift').hide();
                    $('#tirewear').show();
                } else {
                    $('#lift').show();
                    $('#tirewear').hide();
                }
            });
        });
    window.onload = function () {
        LoadData();
        LoadTrackData();
    };
    function LoadData() {
          $("#tblVehicle tbody tr").remove();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("getvehicles")',
            dataType: 'json',
            success: function (data) {
                $.each(data.data, function (i, item) {
                    var rows = "<tr>"
                        + "<td class='prtoducttd'>" + item.Id + "</td>"
                        + "<td class='prtoducttd'>" + item.Name + "</td>"
                        + "<td class='prtoducttd'>" + item.Type+ "</td>"
                        + "<td class='btn-block'> <a class='btn btn-success text-white' href='/racetrack/index' onClick=AddtoTrack("+ item.Id +")> Add To Track</button> </td>"
                    + "</tr>";
                    $('#tblVehicle tbody').append(rows);
                });
            },
            error: function (ex) {
                //var r = jQuery.parseJSON(response.responseText);
                //alert("Message: " + r.Message);
                //alert("StackTrace: " + r.StackTrace);
                //alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
    }

    function LoadTrackData() {
         $("#tblTrack tbody tr").remove();
        $.ajax({
            type: 'GET',
            url: '@Url.Action("GetVehicleOnTrack")',
            dataType: 'json',
            success: function (data) {
                var items = '';
                $.each(data.data, function (i, item) {
                    var rows = "<tr>"
                        + "<td class='prtoducttd'>" + item.vehicleId + "</td>"
                        + "<td class='prtoducttd'>" + item.vehicleName + "</td>"
                        + "<td class='prtoducttd'>" + item.trackName + "</td>"
                        + "<td class='btn-block'> <a class='btn btn-danger text-white' href='/racetrack/index' onClick=RemoveFromTrack(" + item.vehicleId + ")> Remove From Track</button> </td>"
                    + "</tr>";
                    $('#tblTrack tbody').append(rows);
                });
            },
            error: function (ex) {
                //var r = jQuery.parseJSON(response.responseText);
                //alert("Message: " + r.Message);
                //alert("StackTrace: " + r.StackTrace);
                //alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
    }

    function AddtoTrack(vehicleId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddToTrack")',
            data: { VehicleId: vehicleId },
            dataType: 'json',
            success: function (data) {
                alert(data.message);
            },
            error: function (ex) {
                console.log(vehicleId);
                //var r = jQuery.parseJSON(response.responseText);
                //alert("Message: " + r.Message);
                //alert("StackTrace: " + r.StackTrace);
                //alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
    }

        function RemoveFromTrack(vehicleId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("RemoveFromTrack")',
            data: { VehicleId: vehicleId },
            dataType: 'json',
            success: function (data) {
                //alert(data.message);
            },
            error: function (ex) {
                console.log(vehicleId);
                //var r = jQuery.parseJSON(response.responseText);
                //alert("Message: " + r.Message);
                //alert("StackTrace: " + r.StackTrace);
                //alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
    }

</script>

}
